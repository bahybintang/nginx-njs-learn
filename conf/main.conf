js_path "/etc/nginx/njs/";
js_import main from main.js;

map $enable_ssl $protocol {
    "true" https;
    "false" http;
}

map $upstream_enable_ssl $upstream_protocol {
    "true" https;
    "false" http;
}

server {
    listen 80;
    resolver 127.0.0.11;

    location ~* "/(bf-[a-z0-9]{8})$" {
        proxy_set_header Accept-Encoding "";
        sub_filter $upstream_protocol://$upstream_domain $protocol://$domain;
        sub_filter $upstream_protocol:\/\/$upstream_domain $protocol:\/\/$domain;
        sub_filter $upstream_domain $domain;
        sub_filter_types 'application/javascript' 'text/css' 'text/html';
        sub_filter_once off;

        # Workaround using auth_request to get the URI
        # https://github.com/nginx/njs-examples#id22
        set $auth_request_uri $request_uri;
        auth_request /fetch;
        auth_request_set $new_uri $upstream_http_x_new_uri;

        proxy_pass $upstream_protocol://$upstream_domain$new_uri;
    }

    location / {
        proxy_set_header Accept-Encoding "";
        sub_filter $upstream_protocol://$upstream_domain $protocol://$domain;
        sub_filter $upstream_protocol:\/\/$upstream_domain $protocol:\/\/$domain;
        sub_filter $upstream_domain $domain;
        sub_filter_types 'application/javascript' 'text/css' 'text/html';
        sub_filter_once off;
        proxy_pass $upstream_protocol://$upstream_domain;
    }

    location /fetch {
        internal;
        proxy_pass http://127.0.0.1:8079$auth_request_uri;
    }
}

# Used for allowing asynchronous call to Redis
server {
    listen 127.0.0.1:8079;
    resolver 127.0.0.11;
    location / {
        js_content main.main;
    }
}